{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"loo",
				"loot_type	(local, instance)"
			],
			[
				"is",
				"isinstance	(builtin, function)"
			],
			[
				"f",
				"fraction"
			],
			[
				"se",
				"set_spy_mode(invisible_time)	(attribute, function)"
			],
			[
				"__",
				"__master	(attribute, instance)"
			],
			[
				"loc",
				"location	(local, instance)"
			],
			[
				"Chu",
				"Chunk	(global, class)"
			],
			[
				"def",
				"defaultdict"
			],
			[
				"eq",
				"_equipment_changed"
			],
			[
				"it",
				"item_type	(local, instance)"
			],
			[
				"rel",
				"related"
			],
			[
				"rela",
				"related_type"
			],
			[
				"p",
				"pop"
			],
			[
				"re",
				"related	(local, instance)"
			],
			[
				"loca",
				"locals	(builtin, function)"
			],
			[
				"bl",
				"block_type_name	(local, instance)"
			],
			[
				"lo",
				"location_name	(local, instance)"
			],
			[
				"ch",
				"change_location"
			],
			[
				"chun",
				"chunks	(local, instance)"
			],
			[
				"til",
				"tiledict"
			],
			[
				"en",
				"engine"
			],
			[
				"self",
				"self_type	(local, instance)"
			],
			[
				"chu",
				"chunk_number"
			],
			[
				"cor",
				"cord_list	(local, instance)"
			],
			[
				"po",
				"position"
			],
			[
				"si",
				"size"
			],
			[
				"ge",
				"generation"
			],
			[
				"co",
				"cords"
			],
			[
				"G",
				"GameObject"
			],
			[
				"ite",
				"item_type"
			],
			[
				"to",
				"to_chunk"
			],
			[
				"fr",
				"free_cords	(attribute, instance)"
			],
			[
				"ig",
				"ignore_position"
			],
			[
				"bad",
				"bad_cords"
			],
			[
				"S",
				"Shell	(global, class)"
			],
			[
				"cla",
				"class	New Class"
			],
			[
				"OV",
				"OverLand"
			],
			[
				"ub",
				"unbind_all_slaves()	(attribute, function)"
			],
			[
				"unb",
				"unbind_slave"
			],
			[
				"he",
				"heal_hp	(local, instance)"
			],
			[
				"s",
				"server	(attribute, instance)"
			],
			[
				"sto",
				"stop_event	(attribute, instance)"
			],
			[
				"sy",
				"sys_exit	(imported, instance)"
			],
			[
				"cl",
				"clear"
			],
			[
				"ru",
				"running	(attribute, instance)"
			],
			[
				"chn",
				"change_hp"
			],
			[
				"n",
				"name	(local, instance)"
			],
			[
				"F",
				"False	(builtin, instance)"
			],
			[
				"add",
				"add_to_remove"
			],
			[
				"pop",
				"pop_from_voxel(player, cord)	(attribute, function)"
			],
			[
				"Ch",
				"ChunkCord"
			],
			[
				"ne",
				"nears	(local, instance)"
			],
			[
				"nea",
				"near_cords	(imported, instance)"
			],
			[
				"ra",
				"range	(builtin, function)"
			],
			[
				"cre",
				"change_voxel(player, new_cord)	(attribute, function)"
			],
			[
				"new",
				"new_cord	(local, instance)"
			],
			[
				"b",
				"blocking	(local, instance)"
			],
			[
				"so",
				"socket_server"
			],
			[
				"T",
				"True	(builtin, instance)"
			],
			[
				"ma",
				"map_data"
			],
			[
				"dic",
				"dict_file"
			],
			[
				"Po",
				"Position"
			],
			[
				"ign",
				"ignore_position"
			],
			[
				"remo",
				"remove"
			],
			[
				"ob",
				"object_type	(local, instance)"
			],
			[
				"at",
				"attack_speed	(attribute, instance)"
			],
			[
				"st",
				"strike_speed	(attribute, instance)"
			],
			[
				"pro",
				"proxy_list	(attribute, instance)"
			],
			[
				"handle",
				"_handle_read"
			],
			[
				"reo",
				"remove"
			],
			[
				"except",
				"NoPlaceException"
			],
			[
				"No",
				"NoPlaceException"
			],
			[
				"get_",
				"get_free_cords"
			],
			[
				"sel",
				"selftype"
			],
			[
				"pre",
				"prev_voxel	(local, instance)"
			],
			[
				"vo",
				"voxels_cords	(local, instance)"
			],
			[
				"isv",
				"is_valid_cord(i, j)	(attribute, function)"
			],
			[
				"y",
				"yield	(keyword, instance)"
			],
			[
				"fil",
				"filter_cords"
			],
			[
				"ver",
				"verify_position"
			],
			[
				"cu",
				"chunk_keys"
			],
			[
				"ava",
				"class_available_chunks"
			],
			[
				"pl",
				"player"
			],
			[
				"ba",
				"bad_chunks"
			],
			[
				"So",
				"SocketError	(imported, instance)"
			],
			[
				"err",
				"error"
			],
			[
				"soc",
				"socket"
			],
			[
				"errr",
				"error	(local, instance)"
			],
			[
				"out",
				"output"
			],
			[
				"prev",
				"prev_chunk_cord	(local, instance)"
			],
			[
				"_hp",
				"_hp_value	(attribute, instance)"
			],
			[
				"hp",
				"hp_value"
			],
			[
				"_ha",
				"_handle_error(client_name, error, event)	(attribute, function)"
			],
			[
				"_han",
				"_handle_error(client_name, error, event)	(attribute, function)"
			],
			[
				"pac",
				"package"
			],
			[
				"er",
				"error	(local, instance)"
			],
			[
				"Stop",
				"StopIteration	(builtin, class)"
			],
			[
				"mess",
				"message	(local, instance)"
			],
			[
				"cli",
				"client_name	(local, instance)"
			],
			[
				"ha",
				"_handle_error"
			],
			[
				"loa",
				"location"
			],
			[
				"sl",
				"slave_names	(local, instance)"
			],
			[
				"size",
				"position_size"
			],
			[
				"in",
				"infilenos"
			],
			[
				"ev",
				"eventlist"
			],
			[
				"ex",
				"excutor	(global, instance)"
			],
			[
				"byt",
				"bytes	(builtin, class)"
			],
			[
				"nm",
				"name"
			],
			[
				"na",
				"name"
			],
			[
				"du",
				"dump"
			],
			[
				"file",
				"filename"
			],
			[
				"glb",
				"global	(keyword, instance)"
			],
			[
				"m",
				"map_data	(local, instance)"
			],
			[
				"de",
				"decompress	(imported, instance)"
			],
			[
				"map",
				"map_tuple"
			],
			[
				"di",
				"dict_file"
			],
			[
				"has",
				"hasattr	(builtin, function)"
			],
			[
				"r",
				"respawned	(attribute, instance)"
			],
			[
				"new_c",
				"new_chunk"
			],
			[
				"end",
				"end_j"
			],
			[
				"t",
				"tile_cords"
			],
			[
				"get",
				"get_list"
			],
			[
				"get_c",
				"get_chunk_by_cord(chunk_i, chunk_j)	(attribute, function)"
			],
			[
				"upda",
				"update_tiles"
			],
			[
				"new_",
				"new_position"
			],
			[
				"chang",
				"change_chunk"
			],
			[
				"as",
				"assert	(keyword, instance)"
			],
			[
				"chunk",
				"chunk_cord"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/blocks.py",
			"settings":
			{
				"buffer_size": 2151,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/innuendo/games/pyglet_rpg/lib/engine/world/location.py",
			"settings":
			{
				"buffer_size": 7223,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/innuendo/games/pyglet_rpg/lib/engine/world/singleton.py",
			"settings":
			{
				"buffer_size": 5547,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/innuendo/games/pyglet_rpg/lib/engine/engine_interface.py",
			"settings":
			{
				"buffer_size": 3133,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/meta.py",
			"settings":
			{
				"buffer_size": 13824,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/pyglet_rpg.sublime-build",
	"command_palette":
	{
		"height": 272.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Pa",
				"Package Control: Install Package"
			],
			[
				"",
				"About"
			],
			[
				"pac",
				"Preferences: Browse Packages"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/units_lib.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/units.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/items.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/mutable.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/meta.py",
		"/tmp/XO.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/chunk.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/player.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/surfaces.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/_location/map_source.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/_location/persistence.py",
		"/home/innuendo/games/pyglet_rpg/bot.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/engine_interface.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/singleton.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/equipment.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/_location/choiser.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/_location/location_math.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/teleports.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location/location_math.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location/choiser.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/_location/__init__.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location/location_map.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/_location/location.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/map_source.py",
		"/home/innuendo/games/pyglet_rpg/data/locations/underground/tiledict.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/client_objects/units.py",
		"/home/innuendo/games/pyglet_rpg/data/locations/underground2/init.py",
		"/home/innuendo/games/pyglet_rpg/data/locations/underground/init.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/choiser.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/misc.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/choiser.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location_math.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location_math.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/blocks.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/shells.py",
		"/home/innuendo/games/pyglet_rpg/data/locations/ground/init.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/persistence.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/mathlib.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/skills.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/client_objects/static_objects.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/client_objects/objects_lib.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/view/view_objects.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/map_observer.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/game_objects.py",
		"/home/innuendo/games/pyglet_rpg/lib/serverside/multiplexer.py",
		"/home/innuendo/games/pyglet_rpg/lib/serverside/server.py",
		"/home/innuendo/games/pyglet_rpg/lib/serverside/socket_server.py",
		"/home/innuendo/games/pyglet_rpg/server.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/objects_containers.py",
		"/home/innuendo/games/pyglet_rpg/lib/share/gameprotocol/server_responses.py",
		"/home/innuendo/games/pyglet_rpg/lib/serverside/socket_server.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/mathlib.py",
		"/home/innuendo/games/pyglet_rpg/lib/share/point.py",
		"/home/innuendo/games/pyglet_rpg/lib/share/point.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location_lib.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location_lib.py",
		"/home/innuendo/games/pyglet_rpg/tools/pyglet_rpg.sublime-project",
		"/home/innuendo/games/master/pyglet_rpg/bot.py",
		"/home/innuendo/games/pyglet_rpg/README.md",
		"/home/innuendo/games/logger.py",
		"/home/innuendo/games/pyglet_rpg/lib/share/serialization.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/map_source.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/mathlib.pxd",
		"/home/innuendo/games/pyglet_rpg/lib/share/point.pxd",
		"/home/innuendo/games/pyglet_rpg/config.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/voxel.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/tuples.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/blocks/block.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/movable.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gui/gui_elements.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gui/gui_elements.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/collissions.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/map_editor.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gui_client.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/voxel.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/cocncept.txt",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gameclient.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/socket_client.py",
		"/home/innuendo/games/master/pyglet_rpg/lib/clientside/socket_client.py",
		"/home/innuendo/games/master/pyglet_rpg/lib/serverside/socket_server.py",
		"/home/innuendo/games/master/pyglet_rpg/lib/serverside/multiplexer.py",
		"/home/innuendo/games/pyglet_rpg/lib/share/protocol_lib.py",
		"/home/innuendo/games/master/pyglet_rpg/lib/share/protocol_lib.py",
		"/home/innuendo/games/pyglet_rpg/lib/share/protocol_lib_new.py",
		"/home/innuendo/games/pyglet_rpg/lib/serverside/socket_server_new.py",
		"/home/innuendo/games/pyglet_rpg/lib/serverside/multiplexer_new.py",
		"/home/innuendo/games/pyglet_rpg/lib/share/packer.py",
		"/tmp/foo.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/errors.py",
		"/home/innuendo/games/pyglet_rpg/tools/mapclean.sh",
		"/home/innuendo/games/pyglet_rpg/lib/share/gameprotocol/client_requestes.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/singleton.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/view/view_lib.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/view/view_land.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/client_objects/shells.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/shells.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/surfaces.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/location_persistence.py",
		"/home/innuendo/games/pyglet_rpg/gen_map.py",
		"/home/innuendo/games/pyglet_rpg/data/locationmaps/ground/init.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/world.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/world_lib.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/world_persistence.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/map_observer.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/skills.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/meta.py",
		"/home/innuendo/games/pyglet_rpg/data/worldmaps/ground/init.py",
		"/home/innuendo/games/pyglet_rpg/data/worldmaps/underground/init.py",
		"/home/innuendo/games/pyglet_rpg/data/worldmaps/underground2/init.py",
		"/home/innuendo/games/pyglet_rpg/tools/delpickles.sh",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/objects_containers.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/player.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/singleton.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/world/objects_containers",
		"/tmp/test.py",
		"/tmp/reversi.py",
		"/home/innuendo/games/pyglet_rpg/lib/share/game_protocol.py",
		"/home/innuendo/games/pyglet_rpg/data/worldmaps/ground/tiledict.py",
		"/home/innuendo/games/pyglet_rpg/lib/engine/engine_interface.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/collissions.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/movable.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gui/gui_lib.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gui/gui_lib.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gui/surfaces.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gui/window.py",
		"/home/innuendo/games/pyglet_rpg/lib/clientside/gui/window.pyx",
		"/home/innuendo/games/pyglet_rpg/lib/engine/events.py"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"/home/innuendo/games/pyglet_rpg/lib/engine/",
			"/home/innuendo/games/pyglet_rpg/lib/engine/world",
			"",
			"*.py",
			"*.pyx",
			"*.py",
			"/home/innuendo/games/pyglet_rpg/lib/engine",
			"/home/innuendo/games/pyglet_rpg/lib/clientside",
			"/home/innuendo/games/pyglet_rpg/lib/engine",
			"/home/innuendo/games/pyglet_rpg/lib/serverside",
			"/home/innuendo/games/pyglet_rpg/lib/engine",
			"/home/innuendo/games/pyglet_rpg/lib/engine/world",
			"*.py,/home/innuendo/games/pyglet_rpg/lib/engine/world",
			"*.py",
			"/home/innuendo/games/pyglet_rpg/lib/engine",
			"/home/innuendo/games/pyglet_rpg/data",
			"/home/innuendo/games/pyglet_rpg/lib/engine",
			"/home/innuendo/games/pyglet_rpg/",
			"/home/innuendo/games/pyglet_rpg/lib/engine/",
			"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects",
			"/home/innuendo/games/pyglet_rpg/lib/engine",
			"/home/innuendo/games/pyglet_rpg/lib/",
			"/home/innuendo/games/pyglet_rpg/lib/engine/",
			"/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects",
			"",
			"/home/innuendo/games/pyglet_rpg/lib/engine/",
			"/home/innuendo/games/pyglet_rpg/lib/engine/world",
			"",
			"*.py",
			"",
			"/home/innuendo/games/pyglet_rpg/engine",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"self.__hp_value",
			"self.move(self.get_walk_vector()",
			"Walker.update(self)",
			"Walker.update",
			"plus_strike_speed",
			"plus_damage",
			"plus_strike_speed",
			"self.prev_strike_time",
			"self.look_size",
			"self.__HP",
			"self.change_position",
			"change_position",
			".__events__",
			")\n",
			"self.__events__",
			"self._stopped",
			"self._moved",
			"self.speed",
			"tile_col",
			"self.alive_after_collission",
			"self.damage",
			".damage",
			"self.attack_speed",
			"self.damage",
			"self.prev_attack_time",
			".fraction",
			"'monsters'",
			"drawText",
			"bool(self.invisible)",
			".invisible",
			"player.fraction",
			"self.invisible",
			"self.fraction",
			"se_Fra",
			"handle_unbind_master",
			"handle_bind_master",
			"self.master",
			"self._slaves",
			"self.master",
			"self._master",
			"self.damage",
			"self.shell_type",
			"self.strike_speed",
			"print 'remove",
			"location.change_chun",
			"pop_item()",
			"popitem()",
			"pop_item()",
			"popitem()",
			"slot.popitem()",
			"pop_item",
			"self._related_objects",
			"conta",
			"self._equipment_changed",
			"self.equipment_changed",
			"_REMOVE",
			"get_vector()._to_victim",
			"get_vector()_to_victim",
			"self.get_vector()",
			"GameObject.update",
			"self.move_vector",
			"self.vector",
			"self._vector",
			"self._move_vector",
			"self.location.game",
			"self.game",
			"self.location.game",
			"self.game",
			"from engine.world.singleton import game",
			"from engine.world.location",
			"dict",
			"'unset_activity'",
			"ChunkCord",
			"flush_genaration_data",
			"get_free_cords",
			"Posi",
			"cord",
			"self._free_cords",
			"self.free_cords",
			"get_free_cords",
			"Pos",
			"self.free_cords",
			"free",
			"free_cords",
			"ccpdef",
			"cdef ",
			"def ",
			"verify_position",
			"cord",
			"(chunk_i, chunk_j)",
			"retu",
			"set_posi",
			"regid",
			"verify_position(self, location, chunk, cord)",
			"verify_position",
			"change_hp",
			"print",
			"effect",
			"Deadly",
			"handle_remove",
			"self.corpse_type",
			"self.spawn()",
			"handle_remove",
			"create_corpse",
			"Player.BLOCKTILES",
			"self.hp",
			"self._HP",
			"self._HP_value",
			"self.hp",
			"self._hp",
			"self.hp",
			"def hp",
			"print cord",
			"_stop",
			"def hit",
			"stop()",
			"server.stop()",
			"self.stop()",
			"stop_e",
			"self.stop",
			"_remove_list",
			"self.running",
			"handle",
			"self.remove_list",
			"__events__",
			"near_cords",
			"self.location.get_near_voxels",
			"self["
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"self.__hp_max",
			"self.move(self.get_walk_vector())",
			"self.move(self.get_walk_vector()",
			"update_damage",
			"update_strike_speed",
			"self.__prev_time",
			"self.__look_size",
			"self.__hp",
			"self.__change_position",
			"self.__events",
			"self.__stopped",
			"self.__moved",
			"self.__speed",
			"self.__alive_after",
			"self.__damage",
			"self.__speed",
			"self.__damage",
			"self.__prev_time",
			"self.is_spy()",
			"player.get_fraction()",
			"self.__spy_mode",
			"self.__fraction",
			"self.__slaves",
			"self.__master",
			"self.__strike_damage",
			"self.__shell_type",
			"self.__strike_speed",
			"popitem",
			"self.__related_objects",
			"self.__equipment_changed",
			"vector_to_victim",
			"self.get_move_vector()",
			"self.get_vector()",
			"self.__vector",
			"self.__move_vector",
			"game",
			"self._free_cords",
			"cpdef ",
			"cdef ",
			"verify_position(self, location, chunk, cord, generation = True)",
			"Breakable",
			"self.__corpse_type",
			"",
			"self.__HP",
			"self.__hp_value",
			"self._HP",
			"self.__hp",
			"self._remove_list",
			"def verify_position(self, location, chunk, cord)",
			"self.location.get_near_voxels(cord)",
			"self.location.get_near_voxels()",
			"create_object",
			"self._equipment_changed",
			"",
			"mutable",
			"MutableObject",
			"enginelib.movable",
			"MovableObject",
			"Position",
			"Positionfrom engine.mathlib import Cord, Position, ChunkCord\nPosition",
			"from engine.mathlib import Cord, Position, ChunkCord\nfrom engine.mathlib import Cord, Position, ChunkCord\nfrom engine.mathlib import Cord, Position, ChunkCord",
			"handle_new_location",
			"NewLocation",
			"assert isinstance(point, Point), point",
			"Point",
			"assert isinstance(point, Point)",
			"Position",
			"TPoint",
			"PointTemplate",
			"SocketError",
			"Breakable",
			"from share.errors",
			"GameObject.verify_position",
			"location.get_voxel(i,j)",
			"self._chunks",
			"self._voxels",
			"get_near_voxels",
			"location.voxels",
			"self.voxels",
			"add_to_voxel",
			"fov_voxels",
			"GameObject.__init__(self, position, name)",
			"GameObject",
			"from config import *\nfrom engine.errors import *",
			"",
			"engine.world",
			"locations",
			"LOCATION_MUL",
			"LOCATION_FILE",
			"SAVE_LOCATION",
			"LOCATION_PERSISTENCE",
			"LOCATION_PATH",
			"location",
			"self._players",
			"chunk_number",
			"WORLD_FILE",
			"CHUNK_SIZE",
			"chunk",
			"CHUNK_",
			"chunk",
			"abs",
			"share.point",
			"",
			"(Point self, Point point)",
			"_(Event self",
			"",
			"Point(0,0)",
			"(Point self):",
			"(Point self)",
			"Point self, float number",
			"float number",
			"",
			"meta"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/innuendo/games/pyglet_rpg/lib/engine/gameobjects/blocks.py",
					"settings":
					{
						"buffer_size": 2151,
						"regions":
						{
						},
						"selection":
						[
							[
								1561,
								1561
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 199.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/innuendo/games/pyglet_rpg/lib/engine/world/location.py",
					"settings":
					{
						"buffer_size": 7223,
						"regions":
						{
						},
						"selection":
						[
							[
								3265,
								3265
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1459.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/innuendo/games/pyglet_rpg/lib/engine/world/singleton.py",
					"settings":
					{
						"buffer_size": 5547,
						"regions":
						{
						},
						"selection":
						[
							[
								2940,
								2940
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1260.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/innuendo/games/pyglet_rpg/lib/engine/engine_interface.py",
					"settings":
					{
						"buffer_size": 3133,
						"regions":
						{
						},
						"selection":
						[
							[
								1422,
								1422
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 575.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/innuendo/games/pyglet_rpg/lib/engine/enginelib/meta.py",
					"settings":
					{
						"buffer_size": 13824,
						"regions":
						{
						},
						"selection":
						[
							[
								7824,
								7824
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5342.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 116.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"server.py"
			],
			[
				"r",
				"README.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 196.0,
	"status_bar_visible": true
}
